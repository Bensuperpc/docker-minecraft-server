version: "3.8"

services:
  mc-proxy:
    image: itzg/bungeecord:latest
    container_name: minecraft-proxy-server
    restart: on-failure:3
    env_file:
      - proxy.env
    environment:
      INIT_MEMORY: "1G"
    ports:
      #       Server Minecraft port
      - "25565:25577"
      #       Rcon port
      - "25576:25576"
      #       Plan port
      # - "8806:8804"
    volumes:
      - proxy:/server
      # - ./docker-bungeecord/docs/config.yml:/config/config.yml
  mc:
    image: itzg/minecraft-server:latest
    container_name: minecraft-server
    restart: on-failure:3
    # tty: true
    # stdin_open: false
    ports:
      #       Server Minecraft port (Disable if you use proxy)
      # - "25565:25565"
      #       Rcon port
      - "25575:25575"
      #       Server Minecraft Bedrock port (GeyserMC)
      # - "19132:19132/udp"
      #       Dynmap port
      - "8123:8123"
      #       Plan port
      - "8804:8804"
    env_file:
      - minecraft.env
    environment:
      MAX_MEMORY: "${MAX_MEMORY:-12G}"
    volumes:
      - mc-data:/data
      - ./plugins.txt:/extras/plugins.txt:ro
      - ./datapacks.txt:/extras/datapacks.txt:ro
  mc-blitz:
    image: itzg/minecraft-server:latest
    container_name: minecraft-blitz-server
    restart: on-failure:3
    # tty: true
    # stdin_open: false
    ports:
      #       Server Minecraft port (Disable if you use proxy like)
      # - "25566:25566"
      #       Rcon port
      - "25577:25577"
      #       Server Minecraft Bedrock port (GeyserMC)
      # - "19132:19132/udp"
      #       Dynmap port
      - "8124:8123"
      #       Plan port
      - "8805:8804"
    env_file:
      - minecraft.env
    environment:
      SERVER_PORT: "25566"
      RCON_PORT: "25577"
      MAX_MEMORY: "${MAX_MEMORY:-4G}"
    volumes:
      - mc-blitz-data:/data
      - ./plugins.txt:/extras/plugins.txt:ro
      - ./datapacks.txt:/extras/datapacks.txt:ro
  rcon-web:
    image: itzg/rcon:latest
    container_name: minecraft-rcon-web
    restart: on-failure:3
    depends_on:
      - mc
      - mc-blitz
      - mc-proxy
    environment:
      RWA_USERNAME: admin
      RWA_PASSWORD: admin
      RWA_ADMIN: "TRUE"
      # is referring to the hostname of 'mc' compose service below
      RWA_RCON_HOST: mc
      # needs to match the password configured for the container, which is 'minecraft' by default
      RWA_RCON_PASSWORD: minecraft
    ports:
      #       web UI port
      - "4326:4326"
      #       websocket access from UI
      - "4327:4327"
    volumes:
      - "rcon:/opt/rcon-web-admin/db"
  backups:
    image: itzg/mc-backup:latest
    container_name: minecraft-backup
    restart: on-failure:3
    depends_on:
      - mc
    env_file:
      - backup.env
    environment:
      # instead of network_mode below, could declare RCON_HOST
      RCON_HOST: mc
      BACKUP_NAME: "server-main"
    volumes:
      # mount the same volume used by server, but read-only
      - mc-data:/data:ro
      # use a host attached directory so that it in turn can be backed up
      # to external/cloud storage
      #- ./mc-backups:/backups
      - mc-backups:/backups
    # share network namespace with server to simplify rcon access
    # network_mode: "service:mc"
  backups-blitz:
    image: itzg/mc-backup:latest
    container_name: minecraft-backup-blitz
    restart: on-failure:3
    depends_on:
      - mc-blitz
    env_file:
      - backup.env
    environment:
      # instead of network_mode below, could declare RCON_HOST
      RCON_HOST: mc-blitz
      BACKUP_NAME: "server-blitz"
      SERVER_PORT: "25566"
      RCON_PORT: "25577"
    volumes:
      # mount the same volume used by server, but read-only
      - mc-blitz-data:/data:ro
      # use a host attached directory so that it in turn can be backed up
      # to external/cloud storage
      #- ./mc-backups:/backups
      - mc-backups:/backups
    # share network namespace with server to simplify rcon access
    # network_mode: "service:mc"
volumes:
  mc-data: {}
  mc-blitz-data: {}
  mc-backups: {}
  rcon: {}
  proxy: {}
