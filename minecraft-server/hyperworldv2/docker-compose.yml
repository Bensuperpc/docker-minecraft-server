version: "3.8"

services:
  mc-proxy:
    image: itzg/bungeecord:latest
    container_name: minecraft-proxy-server
    profiles:
      - mc-proxy
    restart: on-failure:3
    env_file:
      - env/proxy.env
    environment:
      INIT_MEMORY: "1G"
    ports:
      #       Server Minecraft port
      - "25565:25577"
      #       Rcon port
      - "25576:25575"
      #       Plan port
      # - "8806:8804"
    volumes:
      - ./mc-proxy:/server
  mc-server:
    image: itzg/minecraft-server:latest
    container_name: minecraft-server
    profiles:
      - mc-server
      - mc-server-main
    depends_on:
      - mc-proxy
    restart: on-failure:3
    # tty: true
    # stdin_open: false
    ports:
      #       Server Minecraft port (Disable if you use proxy)
      # - "25565:25565"
      #       Rcon port
      - "25575:25575"
      #       Server Minecraft Bedrock port (GeyserMC)
      # - "19132:19132/udp"
      #       Dynmap port
      - "8123:8123"
      #       Plan port
      - "8804:8804"
    env_file:
      - env/server.env
      - env/world.env
      - env/mods_plugins.env
    environment:
      MAX_MEMORY: "${MAX_MEMORY:-12G}"
    volumes:
      - ./mc-data:/data
#      - ./asset_links/plugins.txt:/extras/plugins.txt:ro
  mc-waitroom:
    image: itzg/minecraft-server:latest
    container_name: minecraft-waitroom-server
    profiles:
      - mc-server-waitroom
    depends_on:
      - mc-proxy
    restart: on-failure:3
    # tty: true
    # stdin_open: false
    ports:
      #       Server Minecraft port (Disable if you use proxy)
      # - "25566:25566"
      #       Rcon port
      - "25577:25575"
      #       Server Minecraft Bedrock port (GeyserMC)
      # - "19132:19132/udp"
    env_file:
      - env/server.env
      - env/waitroom.env
    environment:
      SERVER_PORT: "25566"
      RCON_PORT: "25577"
      MAX_MEMORY: "${MAX_MEMORY:-4G}"
    volumes:
      - ./mc-waitroom-data:/data
  rcon-web:
    image: itzg/rcon:latest
    container_name: minecraft-rcon-web
    profiles:
      - mc-web
    restart: on-failure:3
    depends_on:
      - mc-server
      - mc-waitroom
      - mc-proxy
    environment:
      RWA_USERNAME: admin
      RWA_PASSWORD: admin
      RWA_ADMIN: "TRUE"
      # is referring to the hostname of 'mc-server' compose service below
      RWA_RCON_HOST: mc-server
      # needs to match the password configured for the container, which is 'minecraft' by default
      RWA_RCON_PASSWORD: minecraft
    ports:
      #       web UI port
      - "4326:4326"
      #       websocket access from UI
      - "4327:4327"
    volumes:
      - ./mc-rcon:/opt/rcon-web-admin/db
  mc-backups:
    image: itzg/mc-backup:latest
    container_name: minecraft-backup
    profiles:
      - mc-backup
      - mc-backup-main
    restart: on-failure:3
    depends_on:
      - mc-server
    env_file:
      - env/backup.env
    environment:
      # instead of network_mode below, could declare RCON_HOST
      RCON_HOST: mc-server
      BACKUP_NAME: "server-main"
    volumes:
      # mount the same volume used by server, but read-only
      - ./mc-data:/data:ro
      # use a host attached directory so that it in turn can be backed up
      # to external/cloud storage
      #- ./mc-backups:/backups
      - ./mc-backups:/backups
    # share network namespace with server to simplify rcon access
    # network_mode: "service:mc"
volumes:
  mc-data: 
    name: mc-data
  mc-waitroom-data:
    name: mc-waitroom-data
  mc-backups:
    name: mc-backups
  mc-rcon:
    name: mc-rcon
  mc-proxy:
    name: mc-proxy

networks:
  app-network:
    driver: bridge
    name: app-network
